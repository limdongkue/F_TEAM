get FEXT extension
if FEXT <> "spr"
    print "The file doesn't have the extension of .spr! Process terminated."
    cleanexit
endif
IDString "\x09\x00\x00\x00"

log MEMORY_FILE 0 0
log MEMORY_FILE2 0 0
log MEMORY_FILE4 0 0
##Open FDSE "pal.pal" 3 
#log MEMORY_FILE3 0 0

###palette inverting
##for palr = 0 < 768
##    get PTEMPBUFF byte 3
##    put PTEMPBUFF byte MEMORY_FILE3
##next palr

#IMJIN1
#set MEMORY_FILE3 binary "\x00\x00\x00\x3F\x3F\x3F\x32\x29\x3A\x32\x29\x3A\x33\x29\x3A\x33\x29\x3A\x33\x2A\x3A\x33\x2A\x3A\x34\x2A\x3A\x34\x2A\x3A\x34\x2A\x3A\x34\x2A\x3A\x34\x2A\x3A\x34\x2A\x3A\x34\x2A\x3A\x34\x2A\x3A\x3F\x3F\x3F\x39\x39\x39\x35\x35\x35\x32\x32\x32\x2E\x2E\x2E\x2B\x2B\x2B\x27\x27\x27\x24\x24\x24\x20\x20\x20\x1C\x1C\x1C\x17\x17\x17\x13\x13\x13\x0F\x0F\x0F\x0B\x0B\x0B\x07\x07\x07\x00\x00\x00\x3F\x32\x3F\x3F\x27\x3F\x3F\x1D\x3F\x3F\x13\x3F\x3F\x09\x3F\x3F\x00\x3F\x39\x03\x36\x33\x07\x2F\x2D\x05\x2A\x27\x03\x25\x21\x02\x1F\x1B\x01\x1A\x15\x00\x15\x0F\x00\x0F\x0A\x00\x09\x04\x00\x04\x3F\x38\x00\x3E\x32\x00\x3A\x2D\x00\x36\x28\x00\x32\x24\x00\x2F\x20\x00\x2B\x1C\x00\x27\x18\x00\x23\x15\x00\x1F\x11\x00\x1C\x0E\x00\x18\x0C\x00\x14\x09\x00\x10\x07\x00\x0D\x05\x00\x08\x03\x00\x3F\x37\x36\x3F\x2F\x2E\x3F\x28\x26\x3F\x20\x1E\x3F\x18\x16\x3F\x10\x0E\x3F\x07\x06\x3F\x00\x00\x37\x00\x00\x30\x00\x00\x28\x00\x00\x21\x00\x00\x19\x00\x00\x12\x00\x00\x0A\x00\x00\x03\x00\x00\x3F\x3C\x28\x3C\x38\x24\x39\x35\x21\x37\x32\x1D\x34\x2E\x1A\x31\x2B\x18\x2F\x28\x15\x2A\x22\x13\x25\x1D\x12\x20\x18\x10\x1B\x13\x0E\x16\x0F\x0C\x11\x0B\x09\x0D\x08\x07\x09\x04\x04\x06\x03\x03\x31\x28\x1E\x2D\x23\x1A\x29\x1F\x16\x25\x1B\x12\x21\x18\x0F\x1E\x15\x0C\x1B\x12\x09\x19\x10\x07\x17\x0E\x05\x15\x0C\x03\x13\x0A\x02\x11\x09\x01\x0F\x07\x00\x0D\x06\x00\x09\x04\x00\x05\x01\x00\x3F\x3B\x32\x3F\x37\x30\x3F\x34\x2A\x3E\x2F\x25\x3A\x29\x1E\x38\x20\x15\x32\x19\x0F\x2D\x14\x0C\x28\x10\x09\x23\x0C\x06\x1F\x08\x04\x1A\x05\x02\x15\x03\x01\x10\x01\x00\x0B\x00\x00\x05\x00\x00\x2F\x3F\x2F\x25\x3F\x25\x14\x3F\x14\x00\x3F\x00\x00\x38\x00\x00\x34\x00\x00\x30\x00\x00\x2C\x00\x00\x27\x00\x00\x23\x00\x00\x1E\x00\x00\x1A\x00\x00\x14\x00\x00\x10\x00\x00\x0C\x00\x00\x09\x00\x31\x35\x2B\x2C\x30\x25\x27\x2B\x20\x22\x26\x1C\x1E\x23\x18\x1A\x20\x14\x17\x1D\x11\x16\x1A\x10\x15\x18\x0F\x13\x15\x0E\x12\x13\x0D\x0E\x10\x09\x0A\x0D\x06\x07\x0B\x04\x05\x08\x02\x03\x05\x01\x37\x37\x3F\x30\x30\x3A\x2A\x2A\x35\x24\x24\x30\x1E\x1E\x2B\x19\x19\x26\x15\x15\x22\x12\x12\x1E\x0F\x0F\x1B\x0C\x0C\x18\x0A\x0A\x15\x08\x08\x12\x06\x06\x0F\x04\x04\x0C\x03\x03\x09\x01\x01\x04\x2D\x3B\x3F\x19\x32\x3F\x0F\x28\x3F\x0C\x1E\x3F\x09\x19\x3F\x06\x14\x3F\x03\x0F\x3F\x00\x0A\x3F\x00\x05\x3F\x00\x00\x3C\x00\x00\x37\x00\x00\x32\x00\x00\x28\x00\x00\x1E\x00\x00\x14\x00\x00\x0A\x0B\x13\x00\x09\x11\x00\x07\x0F\x00\x05\x0D\x00\x04\x0C\x00\x00\x07\x1A\x00\x06\x17\x00\x05\x15\x3B\x37\x3D\x3B\x37\x3D\x3B\x37\x3D\x3B\x37\x3D\x3B\x37\x3D\x3B\x37\x3D\x3B\x37\x3D\x3B\x37\x3D\x3E\x35\x28\x3A\x30\x23\x36\x2B\x1E\x32\x27\x1B\x2F\x24\x18\x2B\x21\x15\x27\x1D\x13\x23\x1A\x11\x20\x17\x0F\x1D\x13\x0D\x19\x11\x0B\x16\x0E\x09\x14\x0C\x07\x11\x09\x06\x0F\x08\x06\x0C\x06\x05\x32\x2A\x22\x2F\x25\x1D\x2C\x20\x17\x29\x1B\x13\x26\x16\x0D\x23\x13\x0B\x20\x11\x0A\x1E\x10\x09\x1B\x0E\x08\x19\x0D\x07\x16\x0B\x06\x14\x0A\x05\x12\x09\x05\x10\x08\x05\x0C\x04\x01\x07\x01\x00\x12\x12\x21\x0F\x0F\x1C\x0C\x0C\x18\x0A\x0A\x15\x08\x08\x12\x0A\x0A\x15\x0D\x0D\x19\x10\x10\x1D\x15\x00\x00\x1E\x00\x00\x2A\x00\x00\x37\x00\x00\x2A\x00\x00\x1E\x00\x00\x12\x00\x00\x1A\x15\x18"

#IMJIN2
set MEMORY_FILE3 binary "\x00\x00\x00\x34\x5F\x2C\x34\x51\x2C\x34\x4A\x3F\x2C\x3F\x37\x2C\x42\x34\x2C\x42\x37\x29\x54\x25\x25\x4A\x29\x29\x3B\x29\x25\x34\x30\x25\x34\x37\x21\x34\x34\x21\x42\x1E\x1E\x34\x1E\x1A\x34\x29\xD1\xAF\x74\x88\x4D\x1E\x77\x5F\x37\xA8\x88\x54\x99\x7B\x4A\xBD\x9C\x5F\x4A\x3B\x13\x4D\x3F\x16\x3B\x29\x0B\x2C\x4D\x2C\x42\x74\x37\x42\x74\x34\x42\x6A\x3B\x3F\x66\x3B\x3B\x5B\x34\x37\x5F\x30\xD1\x9C\x6D\xB2\x77\x1A\xD1\xBD\xB2\xC3\x95\x21\xB8\x7E\x16\xC9\xAC\x70\xCC\xBD\xB5\xC3\x9F\x51\xB8\x74\x13\xC0\x8F\x1A\xC0\x99\x46\xCC\xB5\x92\xB2\x66\x0B\xAC\x51\x07\x99\x30\x04\x8F\x21\x04\x77\x0B\x00\x85\x7E\x70\x88\x77\x63\xB2\xA8\x9C\x8C\x82\x70\x9F\x95\x85\xB2\xA8\x9C\xBB\xB8\xAF\x92\x8F\x82\x99\x92\x88\xBB\xAF\x9F\x8C\x7B\x6A\x8F\x82\x6D\x37\x3B\x66\x34\x37\x58\x2C\x30\x51\x92\x8C\x7B\x3B\x30\x30\x29\x16\x07\x5F\x54\x4D\x00\xAF\x00\xAF\x00\x00\xAF\xAF\x00\x63\x58\x4D\x3F\x37\x25\x5B\x58\x4A\x4D\x4A\x21\x58\x46\x25\x9C\x88\x6D\x82\x74\x51\x74\x63\x42\x6D\x5F\x3F\x8F\x7E\x5F\x54\x4A\x37\x6D\x63\x54\x7B\x70\x5F\x4D\x4A\x3B\x77\x6D\x63\x7E\x6A\x66\x70\x6A\x5F\x6A\x63\x58\x3B\x37\x29\x5B\x54\x42\x4A\x46\x3B\x6A\x63\x51\x70\x6A\x5B\x4D\x42\x30\x42\x3B\x29\x5F\x54\x42\x42\x1E\x1A\x46\x34\x13\x54\x42\x1A\x66\x42\x3B\x51\x34\x2C\x82\x58\x4D\x74\x58\x30\x85\x46\x1E\x8F\x6D\x30\x85\x5F\x29\x99\x5B\x25\x6A\x3B\x1A\x66\x3B\x1A\x70\x37\x1A\x5F\x37\x16\x77\x46\x1A\x66\x13\x13\x4D\x25\x1E\xCE\xB5\x99\x5B\x30\x25\x6A\x3B\x2C\x70\x3F\x30\x77\x42\x34\x85\x4D\x51\x8C\x51\x42\x92\x58\x4D\x99\x63\x4D\xCE\xC0\x9F\xA8\x74\x5B\xB5\x85\x6A\xB8\x8C\x70\x66\x8C\x8C\x5F\x82\x7E\x54\x70\x77\x51\x77\x70\x4D\x66\x6D\x4A\x6A\x70\x42\x66\x66\x4A\x6A\x66\x4A\x58\x7E\x3F\x4A\x70\x3F\x63\x5F\x3F\x58\x5F\x37\x42\x66\x34\x4A\x5B\x30\x37\x5B\x25\x2C\x46\xB5\xC0\xCC\x34\x42\x5F\x30\x3F\x5B\x77\x5F\x51\x58\x4A\x3B\x51\x42\x34\x58\x46\x37\xAF\x99\x4D\xAC\x95\x4A\x63\x54\x13\x7B\x6A\x13\x85\x70\x13\x54\x5F\x5F\x3F\x4A\x4A\x85\xB5\xAF\x70\x9C\x9C\x4A\x51\x58\x7B\x29\x1A\x88\x34\x21\x9C\x42\x29\xAC\x4D\x34\xBB\x63\x3F\xC9\x85\x58\x82\x2C\x1E\x92\x3B\x25\xA2\x46\x2C\xB5\x5B\x3B\xC3\x70\x4A\xD1\xA5\x6D\xD4\xD4\xB8\xD4\xC9\x9F\xD4\xC0\x92\xD4\xB5\x88\xD4\xAF\x82\xD4\xC6\x95\xC9\x7B\x51\xCE\x8C\x5F\xD1\xA5\x74\xD1\xAF\x74\xD1\x9C\x6D\x34\x51\x37\x51\x25\x04\x4A\x21\x04\x42\x1E\x00\x37\x1A\x00\x34\x16\x00\x2C\x13\x00\x1E\x0B\x00\x63\x2C\x04\x51\x66\x85\x4A\x58\x7B\x46\x6D\x66\x42\x51\x74\x3B\x46\x66\x37\x4D\x5B\x2C\x37\x54\x25\x2C\x4D\x1E\x21\x46\x1A\x1E\x42\x1A\x1E\x42\x16\x1A\x3B\x16\x16\x37\x0F\x0F\x34\x58\x29\x04\x25\x25\x25\x46\x46\x46\x6D\x6D\x6D\x8F\x8F\x8F\x25\x13\x00\x46\x2C\x00\x6D\x4D\x00\x8F\x5F\x00\x25\x00\x25\x3F\x00\x3F\x5B\x00\x5B\x77\x00\x77\x00\x25\x25\x00\x3F\x3F\x00\x5B\x5B\x00\x77\x77\x25\x25\x00\x46\x46\x00\x6D\x6D\x00\x8F\x8F\x00\x00\x25\x00\x00\x3F\x00\x00\x5B\x00\x00\x77\x00\x25\x00\x00\x4A\x00\x00\x6D\x00\x00\x8F\x00\x00\x00\x00\x25\x00\x00\x4A\x00\x00\x6D\x00\x00\x8F\xC9\xC9\xC9\x0F\x0F\x0F\x1E\x1E\x1E\x2C\x2C\x2C\x3F\x3F\x3F\x4D\x4D\x4D\x5B\x5B\x5B\x6A\x6A\x6A\x7B\x7B\x7B\x88\x88\x88\x95\x95\x95\xA2\xA2\xA2\xB2\xB2\xB2\xBD\xBD\xBD\xD4\xC0\xD4\xD4\xD4\xD4"

#MYTH
#set MEMORY_FILE3 binary "\x00\x00\x00\x30\x37\x39\x14\x30\x39\x1E\x32\x39\x2A\x2A\x28\x2D\x2C\x2B\x0E\x16\x1A\x0F\x16\x1D\x10\x16\x1B\x10\x18\x19\x12\x1A\x0A\x16\x1A\x0F\x19\x23\x0C\x18\x21\x0B\x16\x19\x0B\x14\x20\x0B\x10\x03\x00\x15\x04\x00\x1A\x05\x00\x1F\x06\x00\x24\x07\x00\x29\x08\x00\x2C\x10\x02\x28\x19\x0B\x12\x18\x1B\x14\x1A\x1D\x26\x21\x10\x2C\x00\x00\x34\x00\x00\x00\x2A\x00\x00\x32\x00\x2C\x2C\x00\x32\x32\x00\x17\x16\x12\x1E\x1C\x14\x13\x0F\x04\x19\x17\x14\x1C\x19\x16\x19\x1A\x14\x1B\x1A\x14\x15\x13\x0B\x1A\x16\x11\x1E\x1A\x11\x19\x16\x11\x1C\x17\x10\x17\x17\x0E\x1A\x16\x0D\x1A\x1A\x15\x1F\x1F\x18\x1F\x1F\x16\x1D\x1E\x16\x1C\x1C\x15\x0C\x07\x03\x10\x0E\x0D\x1A\x18\x10\x14\x0F\x06\x12\x09\x08\x13\x11\x0C\x12\x0D\x0C\x15\x11\x0F\x0E\x0E\x07\x19\x16\x10\x21\x1F\x1B\x1A\x17\x0F\x16\x0F\x0D\x18\x16\x10\x15\x10\x04\x1A\x17\x16\x19\x18\x15\x1A\x17\x13\x18\x16\x0D\x1C\x1B\x17\x1F\x18\x0E\x17\x13\x07\x1E\x1B\x17\x1F\x1B\x12\x21\x1F\x1A\x22\x1D\x1C\x23\x18\x15\x23\x1F\x16\x08\x08\x01\x1F\x1A\x0C\x1D\x18\x10\x17\x14\x0D\x26\x22\x1E\x27\x25\x21\x27\x27\x23\x1A\x17\x10\x28\x25\x20\x10\x0E\x09\x29\x24\x1D\x12\x0F\x08\x2A\x28\x23\x2F\x2C\x29\x31\x2E\x2A\x32\x30\x2E\x08\x0D\x17\x11\x17\x1C\x0A\x12\x24\x0E\x19\x26\x09\x14\x25\x0D\x18\x25\x0C\x14\x26\x0B\x16\x24\x0A\x13\x21\x0A\x12\x24\x09\x11\x23\x0D\x1B\x2F\x05\x11\x20\x13\x21\x34\x0A\x17\x2A\x29\x2A\x2B\x04\x0D\x1A\x07\x15\x26\x16\x16\x16\x04\x0A\x07\x0C\x10\x16\x14\x14\x11\x19\x19\x18\x0E\x11\x15\x18\x18\x1A\x12\x1A\x26\x1A\x1B\x1D\x12\x15\x1A\x0A\x0E\x14\x11\x12\x16\x0D\x12\x18\x0B\x0F\x15\x33\x1B\x10\x36\x1F\x13\x37\x25\x16\x35\x26\x19\x32\x23\x17\x2B\x1D\x12\x1F\x0E\x05\x2A\x11\x07\x30\x14\x09\x39\x1F\x0E\x39\x2D\x1F\x39\x29\x13\x39\x2B\x16\x39\x30\x20\x39\x33\x10\x39\x39\x33\x37\x1D\x0C\x39\x24\x0D\x0F\x04\x04\x11\x04\x04\x13\x05\x04\x1D\x09\x06\x1A\x08\x06\x22\x0C\x07\x27\x0D\x09\x2C\x10\x0B\x28\x10\x08\x35\x12\x0E\x39\x22\x16\x39\x28\x1A\x39\x34\x24\x39\x39\x2D\x15\x1C\x06\x01\x0C\x01\x02\x10\x02\x01\x02\x01\x03\x06\x01\x00\x0B\x00\x1C\x17\x0A\x01\x11\x01\x1A\x16\x01\x00\x15\x00\x04\x1C\x05\x05\x20\x06\x16\x1A\x08\x15\x11\x04\x16\x18\x0E\x13\x16\x05\x13\x1D\x0F\x11\x17\x0D\x17\x12\x08\x10\x16\x08\x10\x14\x09\x10\x17\x08\x10\x16\x0B\x10\x14\x08\x10\x11\x09\x10\x14\x08\x0F\x14\x09\x15\x10\x06\x0E\x15\x08\x0E\x13\x07\x0D\x11\x06\x09\x15\x06\x19\x1E\x09\x19\x1F\x11\x03\x23\x0B\x15\x1E\x0D\x0F\x18\x09\x14\x10\x05\x11\x1C\x0C\x14\x1A\x09\x18\x21\x14\x11\x0D\x03\x15\x1F\x09\x15\x1C\x0F\x13\x1E\x0B\x09\x0D\x08\x08\x10\x09\x07\x0F\x06\x22\x22\x21\x28\x27\x27\x16\x15\x15\x26\x25\x24\x0F\x0C\x02\x39\x39\x00\x00\x39\x00\x39\x00\x00\x12\x12\x12\x19\x19\x19\x21\x21\x21\x14\x0D\x00\x1D\x15\x00\x26\x1A\x00\x10\x00\x10\x16\x00\x16\x1D\x00\x1D\x00\x0D\x0D\x00\x16\x16\x00\x1D\x1D\x14\x14\x00\x1D\x1D\x00\x26\x26\x00\x00\x11\x00\x00\x19\x00\x00\x1F\x00\x14\x00\x00\x1F\x00\x00\x2A\x00\x00\x00\x00\x14\x00\x00\x1F\x00\x00\x2A\x1C\x18\x0C\x1B\x17\x0B\x1A\x16\x0C\x17\x14\x06\x16\x12\x07\x13\x10\x04\x11\x0F\x03\x06\x06\x06\x0B\x0B\x0B\x0E\x0E\x0E\x16\x16\x16\x1D\x1D\x1D\x28\x28\x28\x36\x36\x36\x39\x33\x39\x39\x39\x39"


set DATBYTE byte 0xFE


get FNAME basename
get FSIZE asize
get PRCEDEACHFRAMESIZE asize MEMORY_FILE

goto 0x04
get FRAMEWIDTH long
get FRAMEHEIGHT long
get FRAMECOUNT long
set FRAMEXYSIZE long FRAMEWIDTH
math FRAMEXYSIZE *= FRAMEHEIGHT

print "Width is %FRAMEWIDTH%, Height is %FRAMEHEIGHT%, and the total number of frame is %FRAMECOUNT%. AND %FRAMEXYSIZE%"

#the info text part 1
putdstring "HQTEAM_SPR_BMP_INFO" 19 MEMORY_FILE4
put 0xA0D short MEMORY_FILE4

set FNAMELEN strlen FNAME
putdstring "STRIPE_NAME|" 12 MEMORY_FILE4
putdstring FNAME FNAMELEN MEMORY_FILE4
put 0xA0D short MEMORY_FILE4

putdstring "TOTAL_FRAME_NUMBER|" 19 MEMORY_FILE4
set COUNTLEN strlen FRAMECOUNT
putdstring FRAMECOUNT COUNTLEN MEMORY_FILE4
put 0xA0D short MEMORY_FILE4

putdstring "WIDTH|" 6 MEMORY_FILE4
set WIDTHLEN strlen FRAMEWIDTH
putdstring FRAMEWIDTH WIDTHLEN MEMORY_FILE4
put 0xA0D short MEMORY_FILE4

putdstring "HEIGHT|" 7 MEMORY_FILE4
set HEIGHTLEN strlen FRAMEHEIGHT
putdstring FRAMEHEIGHT HEIGHTLEN MEMORY_FILE4
put 0xA0D short MEMORY_FILE4

putdstring "FRAME_BITMAP_LIST:" 18 MEMORY_FILE4
put 0xA0D short MEMORY_FILE4

goto 0x4c0

for i = 0 < FRAMECOUNT
    get EACHOFFSET long
    savepos WAITHERE
    set IFLASTTEST i
    math IFLASTTEST += 1
    if IFLASTTEST == FRAMECOUNT
        goto 0xbc8
        get NEXTOFFSETASSIZE long
    else
        get NEXTOFFSETASSIZE long    
    endif
    math NEXTOFFSETASSIZE -= EACHOFFSET
    math EACHOFFSET += 0xbf4
    string OUTPUTNAME = fname
    string OUTPUTNAME += i
    string OUTPUTNAME += ".bmp"
    goto EACHOFFSET
    for j = 0 < NEXTOFFSETASSIZE
        get TEMPBYTE byte
        if TEMPBYTE == DATBYTE
            get TRANSLEN byte
            for k = 0 < TRANSLEN
                get PRCEDEACHFRAMESIZE asize MEMORY_FILE
                if PRCEDEACHFRAMESIZE < FRAMEXYSIZE
                    put TEMPBYTE byte MEMORY_FILE
                else
                    math k == TRANSLEN
                endif
            next k
        else
            put TEMPBYTE byte MEMORY_FILE
        endif
        get PRCEDEACHFRAMESIZE asize MEMORY_FILE
        if PRCEDEACHFRAMESIZE >= FRAMEXYSIZE
            math j == NEXTOFFSETASSIZE
        endif

    next j
    get PRCEDEACHFRAMESIZE asize MEMORY_FILE
    print "Size: %NEXTOFFSETASSIZE% Offset: %EACHOFFSET% Output Size: %PRCEDEACHFRAMESIZE%"

#Preliminary modulo test
set MODULOTEST long
math MODULOTEST == FRAMEWIDTH
math MODULOTEST %= 4
math MODULOREMAIN == 4
math MODULOREMAIN -= MODULOTEST
print "MODULO IS %MODULOTEST% and the remain is %MODULOREMAIN%"


#print "step1"
# BMP Header    
PutDString "BM" 2 MEMORY_FILE2
math BMP_OFFSET == 0x436
math TOTAL_BMP_SIZE == PRCEDEACHFRAMESIZE
math TOTAL_BMP_SIZE += BMP_OFFSET
xmath TOTAL_BMP_SIZE "(FRAMEHEIGHT * MODULOREMAIN) + TOTAL_BMP_SIZE"
Put TOTAL_BMP_SIZE long MEMORY_FILE2
Put 0x0 long MEMORY_FILE2      # reserved bytes
Put BMP_OFFSET long MEMORY_FILE2     # offset of bmp data

#print "step2"
# DIB header (bitmap information header)
Put 0x28 long MEMORY_FILE2       #108
put FRAMEWIDTH long MEMORY_FILE2   # bitmap width in pixels
math TMPHEIGHT n FRAMEHEIGHT
Put TMPHEIGHT long MEMORY_FILE2   # bitmap height. must be negatve.
Put 0x01 short MEMORY_FILE2 # no. of colour planes being used. Must be set to 1
Put 0x08 short MEMORY_FILE2 # no. of bits per pixel
Put 0x00 long MEMORY_FILE2 # compression method (Allows us to specify RGBA order)
Put FRAMEXYSIZE long MEMORY_FILE2 # image size
Put 0x0b12 long MEMORY_FILE2 # horizontal resolution (pixels per meter)
Put 0x0b12 long MEMORY_FILE2 # vertical resolution
Put 0x00 long MEMORY_FILE2 # no. of colours in palette, or 0 to default to 2^n
Put 0x00 long MEMORY_FILE2 # no. of important colours

## PALETTE
##goto 0 3
##for rgbs = 0 < 256
##    get RGBR byte 3
##    get RGBG byte 3
##    get RGBB byte 3
##    put RGBB byte MEMORY_FILE2
##    put RGBG byte MEMORY_FILE2
##    put RGBR byte MEMORY_FILE2
##    put 0x00 byte MEMORY_FILE2
##next rgbs

# PALETTE
goto 0 MEMORY_FILE3
for rgbs = 0 < 256
    get RGBR byte MEMORY_FILE3
    get RGBG byte MEMORY_FILE3
    get RGBB byte MEMORY_FILE3
    put RGBB byte MEMORY_FILE2
    put RGBG byte MEMORY_FILE2
    put RGBR byte MEMORY_FILE2
    put 0x00 byte MEMORY_FILE2
next rgbs


#print "step4"
# Inverting
goto 0 MEMORY_FILE
for TRANSFERING = 0 < FRAMEHEIGHT
    for CHARCNT = 0 < FRAMEWIDTH
        get TEMPBUFFER byte MEMORY_FILE
        put TEMPBUFFER byte MEMORY_FILE2
    next CHARCNT
    if MODULOTEST <> 0
        for padd = 0 < MODULOREMAIN
            put 0x20 byte MEMORY_FILE2
        next padd
    endif
next TRANSFERING

#print "step5"
    set OPNAMELEN strlen OUTPUTNAME
    putdstring OUTPUTNAME OPNAMELEN MEMORY_FILE4
    put 0xA0D short MEMORY_FILE4
    
    get ALLDONESIZE asize MEMORY_FILE2
    Log OUTPUTNAME 0 ALLDONESIZE MEMORY_FILE2

    Log MEMORY_FILE 0 0
    Log MEMORY_FILE2 0 0
    goto WAITHERE
next i

putdstring "END_OF_LIST|" 12 MEMORY_FILE4
put 0xA0D short MEMORY_FILE4

string INFOFILENAME = FNAME
string INFOFILENAME += ".txt"
get INFOSIZE asize MEMORY_FILE4
log INFOFILENAME 0 INFOSIZE MEMORY_FILE4